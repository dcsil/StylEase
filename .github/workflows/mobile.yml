name: Mobile

# Triggered when code is pushed to any branch in a repository
on: 
  push: 
    branches:
      - main
      - dev


jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # env:
    #   DSN: ${{ vars.DSN }}

    # defaults:
    #   run:
    #     working-directory: client

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          cd client
          npm install

      - name: Create .env file
        run: |
          cd client
          echo ${{ secrets.CLIENT_ENV_FILE }} > .env
          cat .env

      - name: Run tests
        run: |
          cd client
          npm run test

      - name: Build Android APK
        run: |
          cd client && cd android && chmod +x gradlew && ./gradlew assembleRelease

      - name: Sign App Bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: client/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: StyleEase Android Release
          path: client/android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: 'warn'



  # build-ios:
  #   runs-on: macos-latest
  #   timeout-minutes: 20
  #   # env:
  #   #   DSN: ${{ vars.DSN }}

  #   defaults:
  #     run:
  #       working-directory: ./client

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'

  #     - name: Install dependencies
  #       run: yarn install

  #     - name: Build iOS app
  #       run: cd ios && pod install && xcodebuild clean archive -workspace client.xcworkspace -scheme client -archivePath client.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty

  #     - name: Run tests
  #       run: npm run test

  #     - name: Archive artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: StyleEase iOS Release
  #         path: ios/build/Release-iphoneos/client.ipa
  #         if-no-files-found: 'warn'
